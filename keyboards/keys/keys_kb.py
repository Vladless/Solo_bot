from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from config import DOWNLOAD_ANDROID, DOWNLOAD_IOS, CONNECT_IOS, CONNECT_ANDROID, PUBLIC_LINK, RENEWAL_PLANS
from handlers.texts import DISCOUNTS


def build_view_keys_kb(records: dict) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    for record in records:
        key_name = record["email"]
        builder.button(
            text=f"üîë {key_name}",
            callback_data=f"view_key|{key_name}",
        )

    builder.button(
        text="üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
        callback_data="profile",
    )

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def build_view_no_keys_kb() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    builder.button(
        text="‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
        callback_data="create_key",
    )

    builder.button(
        text="üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
        callback_data="profile",
    )

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def build_view_key_kb(key: str, key_name: str) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(
            text="üçè –°–∫–∞—á–∞—Ç—å –¥–ª—è iOS",
            url=DOWNLOAD_IOS,
        ),
        InlineKeyboardButton(
            text="ü§ñ –°–∫–∞—á–∞—Ç—å –¥–ª—è Android",
            url=DOWNLOAD_ANDROID,
        ),
    )

    builder.row(
        InlineKeyboardButton(
            text="üçè –ü–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞ iOS",
            url=f"{CONNECT_IOS}{key}",
        ),
        InlineKeyboardButton(
            text="ü§ñ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞ Android",
            url=f"{CONNECT_ANDROID}{key}",
        ),
    )

    builder.row(
        InlineKeyboardButton(
            text="üíª Windows/Linux",
            callback_data=f"connect_pc|{key_name}",
        )
    )

    builder.row(
        InlineKeyboardButton(
            text="‚è≥ –ü—Ä–æ–¥–ª–∏—Ç—å",
            callback_data=f"renew_key|{key_name}",
        ),
        InlineKeyboardButton(
            text="‚ùå –£–¥–∞–ª–∏—Ç—å",
            callback_data=f"delete_key|{key_name}",
        ),
    )

    if not key.startswith(PUBLIC_LINK):
        builder.row(
            InlineKeyboardButton(
                text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                callback_data=f"update_subscription|{key_name}",
            )
        )

    builder.row(
        InlineKeyboardButton(
            text="üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
            callback_data="profile",
        )
    )

    return builder.as_markup()


def build_key_delete_kb(client_id: str) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    builder.button(
        text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å",
        callback_data=f"confirm_delete|{client_id}",
    )

    builder.button(
        text="‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å",
        callback_data="view_keys"
    )

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


def build_renewal_plans_kb(client_id: str) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(
            text=f'üìÖ 1 –º–µ—Å—è—Ü ({RENEWAL_PLANS["1"]["price"]} —Ä—É–±.)',
            callback_data=f"renew_plan|1|{client_id}",
        )
    )

    builder.row(
        InlineKeyboardButton(
            text=f'üìÖ 3 –º–µ—Å—è—Ü–∞ ({RENEWAL_PLANS["3"]["price"]} —Ä—É–±.) {DISCOUNTS["3"]}% —Å–∫–∏–¥–∫–∞',
            callback_data=f"renew_plan|3|{client_id}",
        )
    )

    builder.row(
        InlineKeyboardButton(
            text=f'üìÖ 6 –º–µ—Å—è—Ü–µ–≤ ({RENEWAL_PLANS["6"]["price"]} —Ä—É–±.) {DISCOUNTS["6"]}% —Å–∫–∏–¥–∫–∞',
            callback_data=f"renew_plan|6|{client_id}",
        )
    )

    builder.row(
        InlineKeyboardButton(
            text=f'üìÖ 12 –º–µ—Å—è—Ü–µ–≤ ({RENEWAL_PLANS["12"]["price"]} —Ä—É–±.) ({DISCOUNTS["12"]}% üî•)',
            callback_data=f"renew_plan|12|{client_id}",
        )
    )

    builder.row(
        InlineKeyboardButton(
            text='üîô –ù–∞–∑–∞–¥',
            callback_data="view_keys",
        )
    )

    return builder.as_markup()


def build_top_up_kb() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    builder.button(
        text="–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
        callback_data="pay",
    )

    builder.button(
        text="üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
        callback_data="profile",
    )

    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)
