from typing import Any

from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from database import delete_coupon, get_all_coupons, create_coupon
from filters.admin import IsAdminFilter
from keyboards.admin.coupons_kb import build_coupons_kb, build_coupons_list_kb, AdminCouponDeleteCallback
from keyboards.admin.panel_kb import AdminPanelCallback, build_admin_back_kb
from logger import logger

router = Router()


class AdminCouponsState(StatesGroup):
    waiting_for_coupon_data = State()


@router.callback_query(
    AdminPanelCallback.filter(F.action == "coupons"),
    IsAdminFilter(),
)
async def handle_coupons(
    callback_query: types.CallbackQuery,
):
    await callback_query.message.edit_text(text="üõ† –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—É–ø–æ–Ω–∞–º–∏:", reply_markup=build_coupons_kb())


@router.callback_query(
    AdminPanelCallback.filter(F.action == "coupons_create"),
    IsAdminFilter(),
)
async def handle_coupons_create(callback_query: types.CallbackQuery, state: FSMContext):
    text = (
        "üé´ <b>–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—É–ø–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:</b>\n\n"
        "üìù <i>–∫–æ–¥</i> üí∞ <i>—Å—É–º–º–∞</i> üî¢ <i>–ª–∏–º–∏—Ç</i>\n\n"
        "–ü—Ä–∏–º–µ—Ä: <b>'COUPON1 50 5'</b> üëà\n\n"
    )

    await callback_query.message.edit_text(
        text=text,
        reply_markup=build_admin_back_kb("coupons"),
    )
    await state.set_state(AdminCouponsState.waiting_for_coupon_data)


@router.message(AdminCouponsState.waiting_for_coupon_data, IsAdminFilter())
async def handle_coupon_data_input(message: types.Message, state: FSMContext, session: Any):
    text = message.text.strip()
    parts = text.split()

    kb = build_admin_back_kb("coupons")

    if len(parts) != 3:
        text = (
            "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!</b> üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "üè∑Ô∏è <b>–∫–æ–¥</b> üí∞ <b>—Å—É–º–º–∞</b> üî¢ <b>–ª–∏–º–∏—Ç</b>\n"
            "–ü—Ä–∏–º–µ—Ä: <b>'COUPON1 50 5'</b> üëà"
        )

        await message.answer(
            text=text,
            reply_markup=kb,
        )
        return

    try:
        coupon_code = parts[0]
        coupon_amount = float(parts[1])
        usage_limit = int(parts[2])
    except ValueError:
        text = "‚ö†Ô∏è <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö!</b>\nüí± –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º, –∞ –ª–∏–º–∏—Ç ‚Äî —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º."

        await message.answer(
            text=text,
            reply_markup=kb,
        )
        return

    try:
        await create_coupon(coupon_code, coupon_amount, usage_limit, session)

        text = (
            f"‚úÖ –ö—É–ø–æ–Ω —Å –∫–æ–¥–æ–º <b>{coupon_code}</b> —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n"
            f"üí∞ –°—É–º–º–∞: <b>{coupon_amount} —Ä—É–±–ª–µ–π</b> \n"
            f"üî¢ –õ–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: <b>{usage_limit} —Ä–∞–∑</b>"
        )

        await message.answer(text=text, reply_markup=kb)
        await state.clear()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫—É–ø–æ–Ω–∞: {e}")


@router.callback_query(
    AdminPanelCallback.filter(F.action == "coupons_list"),
    IsAdminFilter(),
)
async def handle_coupons_list(callback_query: types.CallbackQuery, session: Any):
    try:
        page = int(callback_query.data.split(":")[1]) if ":" in callback_query.data else 1
        per_page = 10
        result = await get_all_coupons(session, page, per_page)
        coupons = result["coupons"]
        total_pages = result["pages"]
        current_page = result["current_page"]

        if not coupons:
            await callback_query.message.edit_text(
                text="‚ùå –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É–ø–æ–Ω–æ–≤!",
                reply_markup=build_admin_back_kb("coupons"),
            )
            return

        kb = build_coupons_list_kb(coupons)
        coupon_list = "üìú –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫—É–ø–æ–Ω–æ–≤:\n\n"

        for coupon in coupons:
            coupon_list += (
                f"üè∑Ô∏è <b>–ö–æ–¥:</b> {coupon['code']}\n"
                f"üí∞ <b>–°—É–º–º–∞:</b> {coupon['amount']} —Ä—É–±–ª–µ–π\n"
                f"üî¢ <b>–õ–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</b> {coupon['usage_limit']} —Ä–∞–∑\n"
                f"‚úÖ <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ:</b> {coupon['usage_count']} —Ä–∞–∑\n\n"
            )

        await callback_query.message.edit_text(text=coupon_list, reply_markup=kb)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫—É–ø–æ–Ω–æ–≤: {e}")
        await callback_query.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫—É–ø–æ–Ω–æ–≤.")


@router.callback_query(
    AdminCouponDeleteCallback.filter(),
    IsAdminFilter(),
)
async def handle_coupon_delete(
    callback_query: types.CallbackQuery, callback_data: AdminCouponDeleteCallback, session: Any
):
    coupon_code = callback_data.coupon_code

    try:
        result = await delete_coupon(coupon_code, session)

        if result:
            await handle_coupons_list(callback_query, session)
        else:
            await callback_query.message.edit_text(
                text=f"‚ùå –ö—É–ø–æ–Ω —Å –∫–æ–¥–æ–º <b>{coupon_code}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            )
            await handle_coupons_list(callback_query, session)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫—É–ø–æ–Ω–∞: {e}")
